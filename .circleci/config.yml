defaults: &defaults
  docker:
    - image: circleci/python:2.7.13
      environment:
        PGUSER: circleci
        TODO_ENV: testing
        DATABASE_URL: postgresql://circleci@localhost/todo_test

    - image: circleci/postgres:9.6
      environment:
        POSTGRES_USER: circleci
        POSTGRES_DB: todo_test
        POSTGRES_PASSWORD: ""

  working_directory: ~/app

version: 2
jobs:
  build:
    docker:
      - image: circleci/python:2.7.13

    working_directory: ~/app

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            virtualenv venv
            source venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
  test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: run tests
          command: |
            source venv/bin/activate
            nosetests --rednose
  coverage:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
      - run: mkdir test_reports
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: run tests
          command: |
            source venv/bin/activate
            nosetests --rednose --with-coverage --cover-inclusive --cover-package=todo --cover-erase --cover-html
            COVERALLS_REPO_TOKEN=NbqVl5cJLcD5rtNVQCd4N4kRORntFwykB coveralls

      - store_artifacts:
          path: test-reports
          destination: test-reports
  bump-version-patch: &bump-version-config
    docker:
      - image: circleci/python:2.7.13

    working_directory: ~/app

    steps:
      - run: exit 0
  bump-version-minor:
    <<: *bump-version-config
  bump-version-major:
    <<: *bump-version-config
  bump-patch: &bump-config
    docker:
      - image: circleci/python:2.7.13
        environment:
          BUMP_LEVEL: patch

    working_directory: ~/app

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-
      - run:
          name: Create bump config
          command: |
            source venv/bin/activate

            git config --global user.email "ci@circleci"
            git config --global user.name "Circle CI"

            bumpversion --message "[skip ci] Bump version: {current_version} -> {new_version}" $BUMP_LEVEL
      - add_ssh_keys:
          fingerprints:
            - "70:20:36:38:3b:3a:b4:a5:c3:08:7e:2e:54:04:a6:1c"
      - run:
          name: Push version commit
          command: |
            git push --tags origin master --force

  bump-minor:
    <<: *bump-config
    docker:
      - image: circleci/python:2.7.13
        environment:
          BUMP_LEVEL: minor
  bump-major:
    <<: *bump-config
    docker:
      - image: circleci/python:2.7.13
        environment:
          BUMP_LEVEL: major

  automate-merging:
    docker:
      - image: circleci/python:2.7.13

    working_directory: ~/app

    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "70:20:36:38:3b:3a:b4:a5:c3:08:7e:2e:54:04:a6:1c"
      - run:
          name: Merge develop into master
          command: |
            git config --global user.email "ci@circleci"
            git config --global user.name "Circle CI"
            git checkout master
            git merge --no-ff develop -m "[skip ci] Merges develop build `echo $CIRCLE_BUILD_NUM` into master"
            git push origin master --force

  deployment:
    docker:
      - image: circleci/python:2.7.13

    working_directory: ~/app

    steps:
      - checkout
      - run: bash .circleci/setup-heroku.sh
      - add_ssh_keys:
          fingerprints:
            - "39:79:40:24:11:64:bc:6f:e8:b4:be:7a:18:c5:b6:84"
      - deploy:
          name: Deploy Master to Heroku
          command: |
            git checkout master
            export CIRCLE_BRANCH=master
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push heroku master --force
              heroku run python manage.py db upgrade
              heroku restart
            fi

workflows:
  version: 2
  build_test_coverage_and_deployment:
    jobs:
      - build:
          filters:
            branches:
              only: develop
      - test:
          requires:
            - build
          filters:
            branches:
              only: develop
      - coverage:
          requires:
            - test
          filters:
            branches:
              only: develop
      - bump-version-patch:
          type: approval
      - bump-version-minor:
          type: approval
      - bump-version-major:
          type: approval
      - bump-patch:
          requires:
            - bump-version-patch
      - bump-minor:
          requires:
            - bump-version-minor
      - bump-major:
          requires:
            - bump-version-major
      - automate-merging:
          requires:
            - coverage
      - deployment:
          requires:
            - automate-merging
