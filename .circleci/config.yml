version: 2
jobs:
  build:
    docker:
      - image: circleci/python:2.7.13

    working_directory: ~/app

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            virtualenv venv
            source venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
  test:
    docker:
      - image: circleci/python:2.7.13
        environment:
          TODO_ENV: testing
          DATABASE_URL: postgresql://circleci@localhost/todo_test

      - image: circleci/postgres:9.4-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: todo_test
          POSTGRES_PASSWORD: ""

    working_directory: ~/app

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: run tests
          command: |
            source venv/bin/activate
            nosetests --rednose
  coverage:
    docker:
      - image: circleci/python:2.7.13
        environment:
          TODO_ENV: testing
          DATABASE_URL: postgresql://circleci@localhost/todo_test

      - image: circleci/postgres:9.4-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: todo_test
          POSTGRES_PASSWORD: ""

    working_directory: ~/app

    steps:
      - checkout
      - run: mkdir test_reports
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: run tests
          command: |
            source venv/bin/activate
            nosetests --rednose --with-coverage --cover-inclusive --cover-package=bucketlist --cover-erase --cover-html
            COVERALLS_REPO_TOKEN=NbqVl5cJLcD5rtNVQCd4N4kRORntFwykB coveralls

      - store_artifacts:
          path: test-reports
          destination: test-reports
  deployment:
    docker:
      - image: circleci/python:2.7.13

    working_directory: ~/app

    steps:
      - checkout
      - run: bash .circleci/setup-heroku.sh
      - add_ssh_keys:
          fingerprints:
            - "39:79:40:24:11:64:bc:6f:e8:b4:be:7a:18:c5:b6:84"
      - deploy:
          name: Deploy Master to Heroku
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push heroku master
              heroku run python manage.py db upgrade
              heroku restart
            fi

workflows:
  version: 2
  build_test_coverage_and_deployment:
    jobs:
      - build
      - test:
          requires:
            - build
      - coverage:
          requires:
            - test
      - deployment:
          requires:
            - coverage
